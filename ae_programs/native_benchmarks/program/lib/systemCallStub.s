# this file is generated by lib/gen_ocall_stub.py script
.text
.global clock
.type clock, @function
.p2align 5
clock:
    mov $0, %r14
    jmp do_sgx_ocall

.global time
.type time, @function
.p2align 5
time:
    mov $1, %r14
    jmp do_sgx_ocall

.global localtime
.type localtime, @function
.p2align 5
localtime:
    mov $2, %r14
    jmp do_sgx_ocall

.global gmtime
.type gmtime, @function
.p2align 5
gmtime:
    mov $3, %r14
    jmp do_sgx_ocall

.global mktime
.type mktime, @function
.p2align 5
mktime:
    mov $4, %r14
    jmp do_sgx_ocall

.global gettimeofday
.type gettimeofday, @function
.p2align 5
gettimeofday:
    mov $5, %r14
    jmp do_sgx_ocall

# puts(char *)
.global puts
.type puts, @function
.p2align 5
puts:
    mov $6, %r14
    jmp do_sgx_ocall

.global open
.type open, @function
.p2align 5
open:
    mov $7, %r14
    jmp do_sgx_ocall

.global close
.type close, @function
.p2align 5
close:
    mov $8, %r14
    jmp do_sgx_ocall

.global read
.type read, @function
.p2align 5
read:
    mov $9, %r14
    jmp do_sgx_ocall

.global write
.type write, @function
.p2align 5
# size_t write_nosgx(int fd, const void *buf, size_t count)
write:
    mov $10, %r14
    jmp do_sgx_ocall

.global lseek
.type lseek, @function
.p2align 5
lseek:
    mov $11, %r14
    jmp do_sgx_ocall

.global socket
.type socket, @function
.p2align 5
socket:
    mov $12, %r14
    jmp do_sgx_ocall

.global bind
.type bind, @function
.p2align 5
bind:
    mov $13, %r14
    jmp do_sgx_ocall

.global connect
.type connect, @function
.p2align 5
connect:
    mov $14, %r14
    jmp do_sgx_ocall

.global listen
.type listen, @function
.p2align 5
listen:
    mov $15, %r14
    jmp do_sgx_ocall

.global accept
.type accept, @function
.p2align 5
accept:
    mov $16, %r14
    jmp do_sgx_ocall

.global fstat
.type fstat, @function
.p2align 5
fstat:
    mov $17, %r14
    jmp do_sgx_ocall

.global send
.type send, @function
.p2align 5
send:
    mov $18, %r14
    jmp do_sgx_ocall

.global recv
.type recv, @function
.p2align 5
recv:
    mov $19, %r14
    jmp do_sgx_ocall

.global sendto
.type sendto, @function
.p2align 5
sendto:
    mov $20, %r14
    jmp do_sgx_ocall

.global recvfrom
.type recvfrom, @function
.p2align 5
recvfrom:
    mov $21, %r14
    jmp do_sgx_ocall

.global gethostname
.type gethostname, @function
.p2align 5
gethostname:
    mov $22, %r14
    jmp do_sgx_ocall

.global getaddrinfo
.type getaddrinfo, @function
.p2align 5
getaddrinfo:
    mov $23, %r14
    jmp do_sgx_ocall

.global getenv
.type getenv, @function
.p2align 5
getenv:
    mov $24, %r14
    jmp do_sgx_ocall

.global getsockname
.type getsockname, @function
.p2align 5
getsockname:
    mov $25, %r14
    jmp do_sgx_ocall

.global getsockopt
.type getsockopt, @function
.p2align 5
getsockopt:
    mov $26, %r14
    jmp do_sgx_ocall

.global getservbyname
.type getservbyname, @function
.p2align 5
getservbyname:
    mov $27, %r14
    jmp do_sgx_ocall

.global getprotobynumber
.type getprotobynumber, @function
.p2align 5
getprotobynumber:
    mov $28, %r14
    jmp do_sgx_ocall

.global setsockopt
.type setsockopt, @function
.p2align 5
setsockopt:
    mov $29, %r14
    jmp do_sgx_ocall

.global htons
.type htons, @function
.p2align 5
htons:
    mov $30, %r14
    jmp do_sgx_ocall

.global htonl
.type htonl, @function
.p2align 5
htonl:
    mov $31, %r14
    jmp do_sgx_ocall

.global ntohs
.type ntohs, @function
.p2align 5
ntohs:
    mov $32, %r14
    jmp do_sgx_ocall

.global ntohl
.type ntohl, @function
.p2align 5
ntohl:
    mov $33, %r14
    jmp do_sgx_ocall

.global signal
.type signal, @function
.p2align 5
signal:
    mov $34, %r14
    jmp do_sgx_ocall

.global shutdown
.type shutdown, @function
.p2align 5
shutdown:
        mov $35, %r14
    jmp do_sgx_ocall

.global exit
.type exit, @function
.p2align 5
exit:
    mov $36, %r14
    jmp do_sgx_ocall

.global mbedtls_net_bind
.type mbedtls_net_bind, @function
.p2align 5
mbedtls_net_bind:
    mov $37, %r14
    jmp do_sgx_ocall

.global mbedtls_net_accept
.type mbedtls_net_accept, @function
.p2align 5
mbedtls_net_accept:
    mov $38, %r14
    jmp do_sgx_ocall

.global mbedtls_net_recv_timeout
.type mbedtls_net_recv_timeout, @function
.p2align 5
mbedtls_net_recv_timeout:
    mov $39, %r14
    jmp do_sgx_ocall

.global mbedtls_net_send
.type mbedtls_net_send, @function
.p2align 5
mbedtls_net_send:
    mov $40, %r14
    jmp do_sgx_ocall

.global mbedtls_net_free
.type mbedtls_net_free, @function
.p2align 5
mbedtls_net_free:
    mov $41, %r14
    jmp do_sgx_ocall

.global sgx_measure_start
.type sgx_measure_start, @function
.p2align 5
sgx_measure_start:
    mov $43, %r14
    jmp do_sgx_ocall

.global sgx_measure_wait
.type sgx_measure_wait, @function
.p2align 5
sgx_measure_wait:
    mov $44, %r14
    jmp do_sgx_ocall

.global do_sgx_ocall
.type do_sgx_ocall, @function
do_sgx_ocall:
    movq %rsp,(_virtual_stack_save)
    movq (_loader_stack_save),%rsp
    movq ocall_table(,%r14,8),%r14
    call *%r14
    movq (_virtual_stack_save),%rsp
    ret

.global secureCopy
.type secureCopy, @function
secureCopy:
    ret


#.global __fprintf_chk
#.type __fprintf_chk, @function
#__fprintf_chk:
#    syscall    


#.global __sprintf_chk
#.type __fprintf_chk, @function
#__fprintf_chk:
#    syscall 
